DECLARE

    TYPE subelemento IS TABLE OF VARCHAR2(100);
    TYPE arreglo IS TABLE OF subelemento;
    ARR_RFC arreglo := arreglo();
    RESULTADO VARCHAR2(8);
    
    FUNCTION RFC_VALIDO_REGEX(pRFC IN VARCHAR2)
    RETURN NUMBER
    IS
        -- EXPRESION REGULAR QUE VALIDA RFC CON ANIOS BISIESTOS, INCLUYENDO LA LETRA ENIE Y EL CARACTER AMPERSAND
        REGEX       VARCHAR2(1000) := '^((['||UPPER(CHR(50097))||'A-Z|'||CHR(38)||']{3}|['||UPPER(CHR(50097))||'A-Z]{4})\d{2}((0[1-9]|1[012])(0[1-9]|1\d|2[0-8])|(0[13456789]|1[012])(29|30)|(0[13578]|1[02])31)(\w{2})([A|0-9]{1}))$|^((['||UPPER(CHR(50097))||'A-Z|'||CHR(38)||']{3}|[A-Z]{4})([02468][048]|[13579][26])0229)(\w{2})([A|0-9]{1})$';
        RESULTADO   NUMBER         := 0;
    BEGIN
    
        SELECT NVL( REGEXP_INSTR(UPPER(pRFC), REGEX), 0 )
          INTO RESULTADO
          FROM DUAL;
    
        RETURN RESULTADO;
        
    EXCEPTION
    WHEN OTHERS
     THEN
      DBMS_OUTPUT.PUT_LINE ('ERROR:' || ' (' || sqlcode || ') '||sqlerrm);
      RETURN 0;
    END RFC_VALIDO_REGEX;
    
BEGIN

    ARR_RFC.EXTEND;
    ARR_RFC(ARR_RFC.LAST) := subelemento('HAJL850520BP1', 'PERSONA FISICA CON HOMOCLAVE');
    ARR_RFC.EXTEND;
    ARR_RFC(ARR_RFC.LAST) := subelemento('HAJ850520BP1', 'PERSONA MORAL CON HOMOCLAVE');
    ARR_RFC.EXTEND;
    ARR_RFC(ARR_RFC.LAST) := subelemento('XAXX010101000', 'PUBLICO GENERAL');
    ARR_RFC.EXTEND;
    ARR_RFC(ARR_RFC.LAST) := subelemento('A&B010509E30', 'PERSONA MORAL CON & (AMPERSAND)');
    ARR_RFC.EXTEND;
    ARR_RFC(ARR_RFC.LAST) := subelemento('FAÑF471231HGA', 'PERSONA FISICA CON Ñ EN APELLIDO');
    ARR_RFC.EXTEND;
    ARR_RFC(ARR_RFC.LAST) := subelemento('MEGC920229LWA', 'PERSONA FISICA NACIDA EN DIA BISIESTO');
    ARR_RFC.EXTEND;
    ARR_RFC(ARR_RFC.LAST) := subelemento('HAJL850520BPB', 'CON DIGITO VERIFICADOR NO TERMINA EN: "A" o [0-9]');
    ARR_RFC.EXTEND;
    ARR_RFC(ARR_RFC.LAST) := subelemento('HAJL850520BPA ', 'CON ESPACIO EN BLANCO');
    ARR_RFC.EXTEND;
    ARR_RFC(ARR_RFC.LAST) := subelemento('HAJL910229BPA', 'ANIO NO BISIESTO');
    ARR_RFC.EXTEND;
    ARR_RFC(ARR_RFC.LAST) := subelemento('HAJL911301BPA', 'MES INCORRECTO');
    ARR_RFC.EXTEND;
    ARR_RFC(ARR_RFC.LAST) := subelemento('HAJL910631BPA', 'DIA DEL MES INCORRECTO');

    FOR i IN ARR_RFC.FIRST..ARR_RFC.LAST LOOP
       IF RFC_VALIDO_REGEX(ARR_RFC(i)(1)) = 1 THEN
        RESULTADO := 'VALIDO  ';
       ELSE
        RESULTADO := 'INVALIDO';
       END IF;
       DBMS_OUTPUT.PUT_LINE ( 'RFC '||ARR_RFC(i)(1)||CHR(9)||RESULTADO||' '||CHR(9)||ARR_RFC(i)(2) );
    END LOOP;

END;
